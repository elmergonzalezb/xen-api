var search_data = {"index":{"searchIndex":["messages","xenapi","async_task_manager()","check_vdi_entity_is_nonexist()","check_vdi_entity_validity()","check_vdi_is_a_snapshot()","check_vdi_is_xs_iso()","check_vm_entity_is_dom0()","check_vm_entity_is_nonexist()","check_vm_entity_is_paravirtual()","check_vm_entity_is_template()","check_vm_entity_validity()","destroy_vdi()","error_disk_full()","error_not_permitted()","error_switch()","error_try_later()","error_undefined()","error_unknown()","error_unknown_with_payload()","error_unsupported()","error_vm_bad_power_state()","get_task_error()","get_task_record()","get_task_result()","get_task_status()","get_vdi_record()","list_task_all_records()","list_vdi()","list_vdi_snapshot()","list_vdi_tools()","new()","number?()","parse_last_boot_record()","session_logout()","success_custom_message()","success_custom_message_with_payload()","success_nodesc()","success_nodesc_with_payload()","task_destroy()","vbd_create()","vbd_get_detail()","vbd_list_()","vdi_add_tag()","vdi_get_tags()","vdi_rm_tag()","vdi_search_by_tag()","vm_add_other_config()","vm_add_tag()","vm_clone()","vm_clone_from_template()","vm_destroy()","vm_get_guest_metrics()","vm_get_guest_metrics_network()","vm_get_metrics()","vm_get_other_config()","vm_get_record()","vm_get_tags()","vm_get_vbds()","vm_list_all()","vm_list_all_templates()","vm_power_off()","vm_power_on()","vm_power_pause()","vm_power_reboot()","vm_power_unpause()","vm_rm_other_config()","vm_rm_tag()","vm_search_by_tag()","xml_parse()","gemfile","gemfile.lock","license","readme"],"longSearchIndex":["messages","xenapi","xenapi#async_task_manager()","xenapi#check_vdi_entity_is_nonexist()","xenapi#check_vdi_entity_validity()","xenapi#check_vdi_is_a_snapshot()","xenapi#check_vdi_is_xs_iso()","xenapi#check_vm_entity_is_dom0()","xenapi#check_vm_entity_is_nonexist()","xenapi#check_vm_entity_is_paravirtual()","xenapi#check_vm_entity_is_template()","xenapi#check_vm_entity_validity()","xenapi#destroy_vdi()","messages::error_disk_full()","messages::error_not_permitted()","messages::error_switch()","messages::error_try_later()","messages::error_undefined()","messages::error_unknown()","messages::error_unknown_with_payload()","messages::error_unsupported()","messages::error_vm_bad_power_state()","xenapi#get_task_error()","xenapi#get_task_record()","xenapi#get_task_result()","xenapi#get_task_status()","xenapi#get_vdi_record()","xenapi#list_task_all_records()","xenapi#list_vdi()","xenapi#list_vdi_snapshot()","xenapi#list_vdi_tools()","xenapi::new()","xenapi#number?()","xenapi#parse_last_boot_record()","xenapi#session_logout()","messages::success_custom_message()","messages::success_custom_message_with_payload()","messages::success_nodesc()","messages::success_nodesc_with_payload()","xenapi#task_destroy()","xenapi#vbd_create()","xenapi#vbd_get_detail()","xenapi#vbd_list_()","xenapi#vdi_add_tag()","xenapi#vdi_get_tags()","xenapi#vdi_rm_tag()","xenapi#vdi_search_by_tag()","xenapi#vm_add_other_config()","xenapi#vm_add_tag()","xenapi#vm_clone()","xenapi#vm_clone_from_template()","xenapi#vm_destroy()","xenapi#vm_get_guest_metrics()","xenapi#vm_get_guest_metrics_network()","xenapi#vm_get_metrics()","xenapi#vm_get_other_config()","xenapi#vm_get_record()","xenapi#vm_get_tags()","xenapi#vm_get_vbds()","xenapi#vm_list_all()","xenapi#vm_list_all_templates()","xenapi#vm_power_off()","xenapi#vm_power_on()","xenapi#vm_power_pause()","xenapi#vm_power_reboot()","xenapi#vm_power_unpause()","xenapi#vm_rm_other_config()","xenapi#vm_rm_tag()","xenapi#vm_search_by_tag()","xenapi#xml_parse()","","","",""],"info":[["Messages","","Messages.html","","<p>Error messages\n"],["XenApi","","XenApi.html","","<p>XenApi Session Manager\n"],["async_task_manager","XenApi","XenApi.html#method-i-async_task_manager","(task_opaqueref, has_payload)","<p>Refactor: AsyncTask Task Manager It would poll the server continuously for\ntask status\n"],["check_vdi_entity_is_nonexist","XenApi","XenApi.html#method-i-check_vdi_entity_is_nonexist","(vdi_opaqueref)","<p>Filter: Check VDI Existency\n"],["check_vdi_entity_validity","XenApi","XenApi.html#method-i-check_vdi_entity_validity","(vdi_opaqueref)","<p>Refactor: Aggregated VDI Validity Check\n"],["check_vdi_is_a_snapshot","XenApi","XenApi.html#method-i-check_vdi_is_a_snapshot","(vdi_opaqueref)","<p>Filter: Ignore Snapshots\n"],["check_vdi_is_xs_iso","XenApi","XenApi.html#method-i-check_vdi_is_xs_iso","(vdi_opaqueref)","<p>Filter: Ignore XS-Tools ISO\n"],["check_vm_entity_is_dom0","XenApi","XenApi.html#method-i-check_vm_entity_is_dom0","(vm_opaqueref)","<p>Filter: Check the requested VM entity is the dom0 or not.\n"],["check_vm_entity_is_nonexist","XenApi","XenApi.html#method-i-check_vm_entity_is_nonexist","(vm_opaqueref)","<p>Filter: Check VM Existency\n"],["check_vm_entity_is_paravirtual","XenApi","XenApi.html#method-i-check_vm_entity_is_paravirtual","(vm_opaqueref)","<p>Filter: Check VM IS PV\n"],["check_vm_entity_is_template","XenApi","XenApi.html#method-i-check_vm_entity_is_template","(vm_opaqueref)","<p>Filter: Check the requested VM entity is an Template or not.\n"],["check_vm_entity_validity","XenApi","XenApi.html#method-i-check_vm_entity_validity","(vm_opaqueref)","<p>Refactor: Aggregated Validity Check\n"],["destroy_vdi","XenApi","XenApi.html#method-i-destroy_vdi","(vdi_opaqueref)","<p>Destroy the specified VDI Params:\n<p>vdi_opaqueref &mdash; VDI Reference\n\n"],["error_disk_full","Messages","Messages.html#method-c-error_disk_full","()",""],["error_not_permitted","Messages","Messages.html#method-c-error_not_permitted","()",""],["error_switch","Messages","Messages.html#method-c-error_switch","(error_string)",""],["error_try_later","Messages","Messages.html#method-c-error_try_later","()",""],["error_undefined","Messages","Messages.html#method-c-error_undefined","()",""],["error_unknown","Messages","Messages.html#method-c-error_unknown","(error_string)",""],["error_unknown_with_payload","Messages","Messages.html#method-c-error_unknown_with_payload","(error_string, payload)",""],["error_unsupported","Messages","Messages.html#method-c-error_unsupported","()",""],["error_vm_bad_power_state","Messages","Messages.html#method-c-error_vm_bad_power_state","()",""],["get_task_error","XenApi","XenApi.html#method-i-get_task_error","(task_opaqueref)","<p>Task Errors Params:\n<p>task_opaqueref &mdash; Task Reference\n\n"],["get_task_record","XenApi","XenApi.html#method-i-get_task_record","(task_opaqueref)","<p>Get Task Record Params:\n<p>task_opaqueref &mdash; Task Reference\n\n"],["get_task_result","XenApi","XenApi.html#method-i-get_task_result","(task_opaqueref)","<p>Task Result Params:\n<p>task_opaqueref &mdash; Task Reference\n\n"],["get_task_status","XenApi","XenApi.html#method-i-get_task_status","(task_opaqueref)","<p>Task Status Params:\n<p>task_opaqueref &mdash; Task Reference\n\n"],["get_vdi_record","XenApi","XenApi.html#method-i-get_vdi_record","(vdi_opaqueref)","<p>Get detail of the specified VDI Params:\n<p>vdi_opaqueref &mdash; VDI Reference\n\n"],["list_task_all_records","XenApi","XenApi.html#method-i-list_task_all_records","()","<p>All Task\n"],["list_vdi","XenApi","XenApi.html#method-i-list_vdi","()","<p>Get a list of all VDI\n"],["list_vdi_snapshot","XenApi","XenApi.html#method-i-list_vdi_snapshot","()","<p>Get a list of all Snapshot VDI\n"],["list_vdi_tools","XenApi","XenApi.html#method-i-list_vdi_tools","()","<p>Get XS-TOOLS VDI\n"],["new","XenApi","XenApi.html#method-c-new","(server_path, server_port = 443, username = 'root', password)","<p>Initalize the API by login to XenServer. Params:\n<p>server_path &mdash; Server Address\n<p>server_port &mdash; Server API Port …\n"],["number?","XenApi","XenApi.html#method-i-number-3F","(string)","<p>stackoverflow.com/questions/5661466/test-if-string-is-a-number-in-ruby-on-rails\n"],["parse_last_boot_record","XenApi","XenApi.html#method-i-parse_last_boot_record","(raw_last_boot_record)","<p>Parse the last boot record to Hash. You may say why don&#39;t I just put\nJSON.parse. The main problem …\n"],["session_logout","XenApi","XenApi.html#method-i-session_logout","()","<p>Logout\n"],["success_custom_message","Messages","Messages.html#method-c-success_custom_message","(description)",""],["success_custom_message_with_payload","Messages","Messages.html#method-c-success_custom_message_with_payload","(description, payload)",""],["success_nodesc","Messages","Messages.html#method-c-success_nodesc","()",""],["success_nodesc_with_payload","Messages","Messages.html#method-c-success_nodesc_with_payload","(payload)",""],["task_destroy","XenApi","XenApi.html#method-i-task_destroy","(task_opaqueref)","<p>Destroy a task, important after working on a Async Task Params:\n<p>task_opaqueref &mdash; Task Reference\n\n"],["vbd_create","XenApi","XenApi.html#method-i-vbd_create","(vm_opaqueref, vdi_opaqueref, device_slot)","<p>Create a Virtual Block Device (Plugged Instantly) Params:\n<p>vm_opaqueref &mdash; VM Reference\n<p>vdi_opaqueref &mdash; VDI  …\n"],["vbd_get_detail","XenApi","XenApi.html#method-i-vbd_get_detail","(vbd_opaqueref)",""],["vbd_list_","XenApi","XenApi.html#method-i-vbd_list_","()",""],["vdi_add_tag","XenApi","XenApi.html#method-i-vdi_add_tag","(vdi_opaqueref, tag)","<p>Add a tag to the specified VDI Params:\n<p>vdi_opaqueref &mdash; VDI Identifier\n<p>tag           &mdash; Tag\n"],["vdi_get_tags","XenApi","XenApi.html#method-i-vdi_get_tags","(vdi_opaqueref)","<p>get VDI tags Params:\n<p>vdi_opaqueref &mdash; VDI Identifier\n<p>tag           &mdash; Tag\n"],["vdi_rm_tag","XenApi","XenApi.html#method-i-vdi_rm_tag","(vdi_opaqueref, tag)","<p>Unset VDI tags Params:\n<p>vdi_opaqueref &mdash; VDI Identifier\n<p>tag           &mdash; Tag\n"],["vdi_search_by_tag","XenApi","XenApi.html#method-i-vdi_search_by_tag","(tag)","<p>search VDI by tag Params:\n<p>tag          &mdash; Tag\n\n<p>Returns: Matched VM\n"],["vm_add_other_config","XenApi","XenApi.html#method-i-vm_add_other_config","(vm_opaqueref, key, value)","<p>Set “other config”, useful for official PV Instance template Params:\n<p>vm_opaqueref &mdash; VM Identifier …\n"],["vm_add_tag","XenApi","XenApi.html#method-i-vm_add_tag","(vm_opaqueref, tag)","<p>Add a tag to the specified VM Params:\n<p>vm_opaqueref &mdash; VM Identifier\n<p>tag          &mdash; Tag\n"],["vm_clone","XenApi","XenApi.html#method-i-vm_clone","(old_vm_opaqueref, new_vm_name)","<p>Clone the target Virtual Machine Returns the reference point of new vm\nAPIDoc P111, Copy tends to be …\n"],["vm_clone_from_template","XenApi","XenApi.html#method-i-vm_clone_from_template","(template_vm_opaqueref, \\ new_vm_name, pv_boot_param, \\ repo_url, distro, distro_release)","<p>Clone from PV Template TODO: Test Required Params:\n<p>template_vm_opaqueref &mdash; Source Template Identifier\n<p>new_vm_name … &mdash; "],["vm_destroy","XenApi","XenApi.html#method-i-vm_destroy","(old_vm_opaqueref)","<p>Erase the target Virtual Machine, along with related VDIs Params:\n<p>old_vm_opaqueref &mdash; VM Identifier\n\n"],["vm_get_guest_metrics","XenApi","XenApi.html#method-i-vm_get_guest_metrics","(vm_opaqueref)","<p>Get Various Runtime Detail about the VM Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_get_guest_metrics_network","XenApi","XenApi.html#method-i-vm_get_guest_metrics_network","(vm_opaqueref)","<p>Get VM Network IPs\ndiscussions.citrix.com/topic/244784-how-to-get-ip-address-of-vm-network-adapters/\n…\n"],["vm_get_metrics","XenApi","XenApi.html#method-i-vm_get_metrics","(vm_opaqueref)","<p>Get Various Physical Details about the VM Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_get_other_config","XenApi","XenApi.html#method-i-vm_get_other_config","(vm_opaqueref)","<p>Get other_config field. Params:\n<p>vm_opaqueref &mdash; VM Identifier\n\n"],["vm_get_record","XenApi","XenApi.html#method-i-vm_get_record","(vm_opaqueref)","<p>Get Virtual Machines Detail by OpaqueRef Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_get_tags","XenApi","XenApi.html#method-i-vm_get_tags","(vm_opaqueref)","<p>Get VM tags Params:\n<p>vm_opaqueref &mdash; VM Identifier\n<p>tag          &mdash; Tag\n"],["vm_get_vbds","XenApi","XenApi.html#method-i-vm_get_vbds","(vm_opaqueref)","<p>Get Block Devices of the specified VM Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_list_all","XenApi","XenApi.html#method-i-vm_list_all","()","<p>Get All Virtual Machines Using list instead to circumvent RuboCop\n"],["vm_list_all_templates","XenApi","XenApi.html#method-i-vm_list_all_templates","(pv = false)","<p>Get all Templates Params:\n<p>pv &mdash; Paravirtual Templates Only?\n\n"],["vm_power_off","XenApi","XenApi.html#method-i-vm_power_off","(vm_opaqueref)","<p>Power OFF the specified Virtual Machine Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_power_on","XenApi","XenApi.html#method-i-vm_power_on","(vm_opaqueref)","<p>Power ON the specified Virtual Machine Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_power_pause","XenApi","XenApi.html#method-i-vm_power_pause","(vm_opaqueref)","<p>Suspend the specified Virtual Machine Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_power_reboot","XenApi","XenApi.html#method-i-vm_power_reboot","(vm_opaqueref)","<p>Reboot the specified Virtual Machines Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_power_unpause","XenApi","XenApi.html#method-i-vm_power_unpause","(vm_opaqueref)","<p>Wake up the specified Virtual Machine Params:\n<p>vm_opaqueref &mdash; VM Reference\n\n"],["vm_rm_other_config","XenApi","XenApi.html#method-i-vm_rm_other_config","(vm_opaqueref, key)","<p>Unset “other config”, useful for official PV Instance template Params:\n<p>vm_opaqueref &mdash; VM Identifier …\n"],["vm_rm_tag","XenApi","XenApi.html#method-i-vm_rm_tag","(vm_opaqueref, tag)","<p>Unset VM tags Params:\n<p>vm_opaqueref &mdash; VM Identifier\n<p>tag          &mdash; Tag\n"],["vm_search_by_tag","XenApi","XenApi.html#method-i-vm_search_by_tag","(tag)","<p>search VM by tag Params:\n<p>tag          &mdash; Tag\n\n<p>Returns: Matched VM\n"],["xml_parse","XenApi","XenApi.html#method-i-xml_parse","(raw_xml)","<p>XML Parser, important github.com/savonrb/nori\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gem &#39;bunny&#39; gem &#39;json&#39; gem &#39;nori&#39;\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  amq-protocol (2.1.0)\n  bunny (2.6.3)\n    amq-protocol (&gt;= 2.0.1) ...</pre>\n"],["LICENSE","","LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2017 Nowhere - The Cloud for Dummies\n<p>Permission is hereby granted, …\n"],["README","","README_md.html","","<p>XenServer API Adapter\n<p>rdoc-image:https://app.codeship.com/projects/4d2a9250-d4a2-0134-07f4-1aaf05821783/status?branch=master\n…\n"]]}}